// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  id            Int      @id @default(autoincrement())
  name          String?  @db.VarChar(255)
  email         String?  @unique @db.VarChar(255)
  passwordHash String   @db.VarChar(255)
  role          String   @default("patient") @db.VarChar(50)
  createdAt     DateTime @default(now())
  deletedAt     DateTime @default(now())

  consultaions consultatations[]
}

model consultatations {
  id Int @id @default(autoincrement())
  userId Int
  symptoms String? @db.Text
  diagnosisSummary String? @db.Text
  severity String? @db.VarChar(50)
  createdAt DateTime @default(now())

  user users @relation(fields: [userId], references: [id])
  consultaionSymptoms consultatationsSymptoms[]
  medicineRecommendations medicineRecommendations[]
  aiLogs aiLogs[]
}

model symptoms {
  id Int @id @default(autoincrement())
  name String @db.VarChar(255)
  description String? @db.Text
  category String? @db.VarChar(100)

  consultaionSymptoms consultatationsSymptoms[]
}

model consultatationsSymptoms {
  consultationId Int
  symptomId Int
  notes String? @db.Text

  consultation consultatations @relation(fields: [consultationId], references: [id])
  symptom symptoms @relation(fields: [symptomId], references: [id])

  @@id([consultationId, symptomId])
}

model medicines {
  id Int @id @default(autoincrement())
  name String @db.VarChar(255)
  imageUrl String? @db.VarChar(255)
  description String? @db.Text
  dosage String? @db.VarChar(100)
  contraindications String? @db.Text
  isPrescriptionRequired Boolean @default(true)

  medicineRecommendations medicineRecommendations[]
}

model medicineRecommendations {
  id Int @id @default(autoincrement())
  consultationId Int
  medicineId Int
  reason String? @db.Text
  confidenceScore Float

  consultation consultatations @relation(fields: [consultationId], references: [id])
  medicine medicines @relation(fields: [medicineId], references: [id])
}

model aiLogs {
  id Int @id @default(autoincrement())
  consultaionId Int
  inputText String? @db.Text
  outputText String? @db.Text
  timestamp DateTime @default(now())

  consultaion consultatations @relation(fields: [consultaionId], references: [id])
}


